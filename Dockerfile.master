FROM public.ecr.aws/lambda/python:3.9-arm64

# Set environment variables
ENV PYTHONPATH="/var/task"
ENV NLTK_DATA=/var/task/nltk_data

WORKDIR /var/task

# Install dependencies first (for better caching)
RUN pip3 install --upgrade pip setuptools wheel
RUN pip3 install --no-cache-dir --target /var/task \
    nltk==3.8.1 \
    requests==2.31.0 \
    boto3>=1.26.0 \
    openai==0.28.0 \
    google-api-python-client

# Download NLTK data
RUN python3.9 -c "import nltk; nltk.download('punkt', download_dir='/var/task/nltk_data')"

# Copy files and remove dotenv imports
COPY newsAlerter/email_preview.html ./
COPY newsAlerter/*.py ./

# Remove dotenv imports from Python files
RUN for file in *.py; do \
    if [ -f "$file" ]; then \
        sed -i '/from dotenv import/d' "$file"; \
        sed -i '/load_dotenv()/d' "$file"; \
        sed -i '/try:.*dotenv/,/except.*:/d' "$file"; \
        sed -i '/try:.*load_dotenv/,/except.*:/d' "$file"; \
        sed -i '/try:.*from.*dotenv/,/except.*:/d' "$file"; \
    fi \
done

# List all imports in Python files
RUN echo "=== All imports in Python files ===" && \
    for file in *.py; do \
        if [ -f "$file" ]; then \
            echo "=== Imports in $file ===" && \
            grep -E "^(from|import)" "$file" || true; \
        fi \
    done

COPY <<'EOF' /var/task/lambda_function.py
import sys
print(f"Python path: {sys.path}")
from master import lambda_handler

def handler(event, context):
    try:
        return lambda_handler(event, context)
    except Exception as e:
        print(f"Error in handler: {str(e)}")
        raise
EOF

# Verify installations
RUN python3.9 -c "import pkg_resources; print('Installed packages:'); [print(p) for p in pkg_resources.working_set]"
RUN ls -la /var/task

# Verify no dotenv references remain
# First show any remaining dotenv references
RUN echo "Files containing dotenv:" && \
    find /var/task -type f -exec grep -l "dotenv" {} \; || true

# Show the actual lines containing dotenv
RUN echo "Lines containing dotenv:" && \
    find /var/task -type f -exec grep "dotenv" {} \; || true

# Now fail if any dotenv references remain
RUN if find /var/task -type f -exec grep -l "dotenv" {} \; | grep .; then \
    echo "❌ Found remaining dotenv references"; \
    exit 1; \
fi

# Show all installed packages and their dependencies
RUN pip3 freeze > /tmp/requirements.txt && \
    echo "=== All installed packages ===" && \
    cat /tmp/requirements.txt && \
    echo "=== Packages depending on python-dotenv ===" && \
    pip3 show python-dotenv || true

CMD ["lambda_function.handler"] 