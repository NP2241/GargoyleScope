AWSTemplateFormatVersion: '2010-09-09'
Description: GargoyleScope News Alerter

Parameters:
  OpenAiApiKey:
    Type: String
    Description: API Key for OpenAI
  GoogleApiKey:
    Type: String
    Description: API Key for Google
  GoogleCseId:
    Type: String
    Description: Google Custom Search Engine ID
  AwsRegion:
    Type: String
    Default: us-west-1
  AwsAccountId:
    Type: String
    Description: AWS Account ID

Resources:
  NewsAlerterFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: newsAlerter
      PackageType: Image
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures: 
        - arm64
      MemorySize: 2048
      Timeout: 120
      Environment:
        Variables:
          NLTK_DATA: /var/task/nltk_data
          REGION: !Ref AwsRegion
          OPENAI_API_KEY: !Ref OpenAiApiKey
          GOOGLE_API_KEY: !Ref GoogleApiKey
          GOOGLE_CSE_ID: !Ref GoogleCseId
      Code:
        ImageUri: !Sub ${AwsAccountId}.dkr.ecr.${AwsRegion}.amazonaws.com/newsalerterfunction:python3.9-v4

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GargoyleScopeNewsAlerterRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: NewsAlerterPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'

  DailyNewsAlert:
    Type: AWS::Events::Rule
    Properties:
      Name: DailyNewsAlertTrigger
      Description: "Triggers news alert Lambda at 12pm PT daily"
      ScheduleExpression: "cron(0 20 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NewsAlerterFunction.Arn
          Id: "DailyNewsAlertTarget"
          Input: '{"source": "aws.events"}'

  NewsAlertPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NewsAlerterFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyNewsAlert.Arn

Outputs:
  NewsAlerterFunction:
    Description: News Alerter Lambda Function ARN
    Value: !GetAtt NewsAlerterFunction.Arn
